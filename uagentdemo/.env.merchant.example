# ============================================================================
# PayAI Merchant Agent Configuration
# ============================================================================

# Agent Identity (REQUIRED)
AGENT_NAME=payment_merchant_agent
AGENT_SEED="your-unique-secure-seed-phrase-here-change-this"
AGENT_NETWORK=testnet

# Agentverse Proxy Configuration (OPTIONAL)
# Set to "true" to enable Agentverse proxy mode
# When enabled, agent connects to Agentverse via mailbox and accepts forwarded messages
# Set to "false" or leave empty for local-only mode
AGENTVERSE=false

# Agentverse Agent Address (OPTIONAL)
# The address of your Agentverse proxy agent
# Used for validation and logging only
AGENTVERSE_AGENT_ADDRESS=

# Payment Configuration (REQUIRED)
MERCHANT_AGENT_ADDRESS=GDw3EAgyNqv28cn3dH4KuLxxcNPJhunMmx1jBMJTyEAv
FACILITATOR_URL=https://facilitator.payai.network
PAYMENT_NETWORK=solana-devnet

# ============================================================================
# Configuration Notes
# ============================================================================

# AGENT_SEED:
# - Must be unique and kept secret
# - Different from Agentverse proxy seed (two distinct agents)
# - Changing seed = different agent address

# AGENTVERSE:
# - Set to "true" to enable Agentverse proxy mode
# - Set to "false" or leave empty for local-only mode
# - When true: agent enables mailbox and accepts messages from Agentverse proxy
# - When false: agent runs standalone

# AGENTVERSE_AGENT_ADDRESS:
# - The address of your Agentverse proxy agent
# - Find this by deploying merchant-agentverse.py and checking logs
# - Optional - used for validation and logging

# MERCHANT_AGENT_ADDRESS:
# - Your Solana wallet address where payments will be sent
# - For testnet: Use Solana devnet address
# - For production: Use Solana mainnet address
# - Get testnet SOL from: https://faucet.solana.com/

# PAYMENT_NETWORK:
# - solana-devnet (testing)
# - solana-mainnet (production)
# - base-sepolia (testnet, requires x402)
# - base-mainnet (production, requires x402)

# ============================================================================
# Agentverse Proxy Setup (for 24/7 availability with full x402 support)
# ============================================================================

# Architecture: Agentverse Proxy â†” Local Merchant
#
# Agentverse proxy: Receives messages from clients, forwards to local merchant
# Local merchant: Processes payments with full x402 support, sends responses
#
# Step 1: Run local merchant FIRST to get its address
#    uv run merchant.py
#    Copy the "Agent address" from the logs (e.g., agent1qw2e3r4...)
#
# Step 2: Deploy merchant-agentverse.py to Agentverse
#    - Upload TWO files: merchant-agentverse.py and models.py
#    - Set Agentverse Secrets:
#      * AGENT_NAME: agentverse_proxy (unique name)
#      * AGENT_SEED: Different seed from local merchant
#      * LOCAL_MERCHANT_ADDRESS: Paste the address from Step 1
#
# Step 3: Get Agentverse proxy address
#    - Check Agentverse logs after deployment
#    - Copy the "Proxy Address" (e.g., agent1qt5y6u7...)
#
# Step 4: Update this .env file
#    AGENTVERSE=true
#    AGENTVERSE_AGENT_ADDRESS=agent1qt5y6u7...  (paste proxy address)
#
# Step 5: Restart local merchant
#    uv run merchant.py
#    Should show "Agentverse proxy mode" in logs
#
# Step 6: Update client to use Agentverse proxy address
#    In client.py:
#    MERCHANT_AGENT_ADDRESS = "agent1qt5y6u7..."  (proxy address, not local)
#
# Step 7: Test the flow
#    uv run client.py
#    Check logs on both Agentverse and local merchant

# With Agentverse proxy enabled:
# - 24/7 message receiving via Agentverse
# - Full x402 + Solana + EVM support (local processing)
# - Clients send to proxy address
# - Proxy forwards to local merchant
# - Local merchant processes and responds via proxy
# - Best for production deployments

# Without Agentverse (local only):
# - Agent only receives messages when running
# - All features still work
# - Clients send directly to local agent
# - Best for development/testing

# ============================================================================
